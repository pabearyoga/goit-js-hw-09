{"mappings":"AAcA,IAAIA,EAAW,EAEXC,EAAQ,IAEZC,aAAY,KAlBZ,IAAuBC,EAAUC,EAepB,KAIPJ,IAGJA,GAAY,EACZC,GAAS,KAvBYE,EAwBPH,EAxBiBI,EAwBPH,EAvBjB,IAAII,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAGpCJ,EAAQ,C,SAAEH,E,MAAUC,IAGpBG,EAAO,C,SAAEJ,E,MAAUC,MAEpBH,OAcFU,MAAK,EAACR,SAAEA,EAAQC,MAAEA,MACjBQ,QAAQC,IAAI,uBAAqBV,QAAiBC,UAEnDU,OAAM,EAACX,SAAEA,EAAQC,MAAEA,MAClBQ,QAAQC,IAAI,sBAAoBV,QAAeC,aAElDH","sources":["src/js/03-promises.js"],"sourcesContent":["function createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delaY); //first delay);\n  });\n}\nlet positioN = 0;\nlet amounT = 10;\nlet delaY = 1000;\n\nsetInterval(() => {\n  if (positioN === amounT) {\n    return;\n  }\n  positioN += 1;\n  delaY += 2000;\n  createPromise(positioN, delaY)\n    .then(({ position, delay }) => {\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}, delaY);\n"],"names":["$47d4ff9957288465$var$positioN","$47d4ff9957288465$var$delaY","setInterval","position","delay","Promise","resolve","reject","setTimeout","Math","random","then","console","log","catch"],"version":3,"file":"03-promises.5568f966.js.map"}