{"mappings":"YAcA,IAAIA,EAAW,EAEXC,EAAQ,IAEZC,aAAY,WAlBZ,IAAuBC,EAAUC,EAepB,KAIPJ,IAnBiBG,EAsBrBH,GAAY,EAtBmBI,EAuB/BH,GAAS,IAtBF,IAAII,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAGpCJ,EAAQ,CAAEH,WAAUC,UAGpBG,EAAO,CAAEJ,WAAUC,YAEpBH,OAcFU,MAAK,SAAAC,G,IAAGT,EAAQS,EAART,SAAUC,EAAKQ,EAALR,MACjBS,QAAQC,IAAI,uBAAwCC,OAAfZ,EAAS,QAAYY,OAANX,EAAM,UAE3DY,OAAM,SAAAJ,G,IAAGT,EAAQS,EAART,SAAUC,EAAKQ,EAALR,MAClBS,QAAQC,IAAI,sBAAqCC,OAAfZ,EAAS,QAAYY,OAANX,EAAM,YAE1DH,G","sources":["src/js/03-promises.js"],"sourcesContent":["function createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delaY); //first delay);\n  });\n}\nlet positioN = 0;\nlet amounT = 10;\nlet delaY = 1000;\n\nsetInterval(() => {\n  if (positioN === amounT) {\n    return;\n  }\n  positioN += 1;\n  delaY += 2000;\n  createPromise(positioN, delaY)\n    .then(({ position, delay }) => {\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}, delaY);\n"],"names":["$ce04d3a99e08e73b$var$positioN","$ce04d3a99e08e73b$var$delaY","setInterval","position","delay","Promise","resolve","reject","setTimeout","Math","random","then","param","console","log","concat","catch"],"version":3,"file":"03-promises.4fefa92c.js.map"}